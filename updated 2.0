CREATE OR REPLACE PACKAGE BODY xxoa_offin_lieu_bank_pkg AS
----------------------------------------------------------------------
   PROCEDURE OA_OffinLieu_bank_Adj_proc (
      p_errbuf    OUT VARCHAR2,
      p_retcode   OUT NUMBER
   ) IS

      v_element_type_id      NUMBER;
      v_valid_record         VARCHAR2(10) := 'Y';
      v_err_msg              VARCHAR2(1000);
      v_request_id           NUMBER;
      l_batch_id             NUMBER;
      l_object_version_number NUMBER;
      v_batch_name           VARCHAR2(1000);
      v_batch_line_id        NUMBER;
      v_batch_object_version_number NUMBER;
      v_request_id1          NUMBER;
      l_user_id              NUMBER;
      l_resp_id              NUMBER;
      l_resp_appl_id         NUMBER;
      v_chk_ele_ent          NUMBER := 0;

      v_start_date           DATE := TO_DATE('01-OCT-2025', 'DD-MON-YYYY');

   ----------------------------------------------------------------------
   CURSOR c_shift_emp IS
      SELECT papf.employee_number,
             papf.full_name,
             paaf.assignment_id,
             paaf.assignment_number,
             ppf.payroll_name,
             papf.effective_start_date emp_start_date
        FROM per_all_people_f papf,
             per_all_assignments_f paaf,
             pay_payrolls_f ppf,
             pay_people_groups ppg,
             fnd_lookup_values flv
       WHERE papf.person_id = paaf.person_id
         AND paaf.payroll_id = ppf.payroll_id
         AND ppg.people_group_id(+) = paaf.people_group_id
         AND flv.lookup_type(+) = 'XXOA_HQ_EMPLOYEE_TYPE'
         AND flv.language(+) = 'US'
         AND ppg.segment2 = flv.lookup_code(+)
         AND UPPER(flv.meaning) = 'SHIFT EMPLOYEE'              -- âœ… only shift employee
         AND UPPER(ppf.payroll_name) IN ('BASE PAYROLL','EXECUTIVE PAYROLL')
         AND paaf.primary_flag = 'Y'
         AND paaf.assignment_type = 'E'
         AND papf.current_employee_flag = 'Y'
         AND TRUNC(SYSDATE) BETWEEN TRUNC(papf.effective_start_date) AND TRUNC(papf.effective_end_date)
         AND TRUNC(SYSDATE) BETWEEN TRUNC(paaf.effective_start_date) AND TRUNC(paaf.effective_end_date);

   BEGIN
      -------------------------------------------------------------------
      v_request_id := fnd_profile.value('conc_request_id');
      l_user_id    := fnd_global.user_id;
      l_resp_id    := fnd_global.resp_id;
      l_resp_appl_id := fnd_global.resp_appl_id;

      v_batch_name := 'OFL_BANK_PLAN_' || v_request_id || '_' || TO_CHAR(SYSDATE, 'DDMONYYYY');
      fnd_file.put_line(fnd_file.LOG, 'Batch Name: ' || v_batch_name);

      -------------------------------------------------------------------
      -- Create Batch Header
      BEGIN
         pay_batch_element_entry_api.create_batch_header (
            p_session_date => TRUNC(SYSDATE),
            p_batch_name => v_batch_name,
            p_business_group_id => 81,
            p_action_if_exists => 'I',
            p_batch_id => l_batch_id,
            p_reject_if_results_exists => 'N',
            p_object_version_number => l_object_version_number
         );
         COMMIT;
         fnd_file.put_line(fnd_file.OUTPUT, 'Batch Created: ' || v_batch_name);
      EXCEPTION
         WHEN OTHERS THEN
            v_valid_record := 'N';
            fnd_file.put_line(fnd_file.LOG, 'Error creating batch: ' || SQLERRM);
      END;

      -------------------------------------------------------------------
      -- Get Element Type Id for "Off in Lieu Bank Plan"
      BEGIN
         SELECT element_type_id
           INTO v_element_type_id
           FROM pay_element_types_f
          WHERE UPPER(element_name) = 'OFF IN LIEU BANK PLAN'
            AND TRUNC(SYSDATE) BETWEEN effective_start_date AND effective_end_date
            AND business_group_id = 81;
      EXCEPTION
         WHEN NO_DATA_FOUND THEN
            v_valid_record := 'N';
            fnd_file.put_line(fnd_file.LOG, 'No element found for Off in Lieu Bank Plan');
      END;

      -------------------------------------------------------------------
      -- Loop through Shift Employees
      FOR rec_emp IN c_shift_emp LOOP
         v_chk_ele_ent := 0;

         BEGIN
            -- Check if element already exists for this employee as on sysdate
            SELECT COUNT(*)
              INTO v_chk_ele_ent
              FROM pay_element_entries_f peef,
                   pay_element_types_f petf,
                   per_all_assignments_f paaf
             WHERE paaf.assignment_id = peef.assignment_id
               AND petf.element_type_id = peef.element_type_id
               AND petf.element_name = 'Off In Lieu Bank Plan'
               AND paaf.assignment_id = rec_emp.assignment_id
               AND TRUNC(SYSDATE) BETWEEN TRUNC(peef.effective_start_date)
                                      AND TRUNC(peef.effective_end_date);
         EXCEPTION
            WHEN OTHERS THEN
               fnd_file.put_line(fnd_file.LOG, 'Error checking entry: ' || SQLERRM);
         END;

         IF v_chk_ele_ent = 0 THEN
            BEGIN
               -- Determine start date: 01-Oct-2025 or joining date if later
               IF rec_emp.emp_start_date > v_start_date THEN
                  v_start_date := rec_emp.emp_start_date;
               END IF;

               pay_batch_element_entry_api.create_batch_line(
                  p_session_date => TRUNC(SYSDATE),
                  p_batch_id => l_batch_id,
                  p_assignment_id => rec_emp.assignment_id,
                  p_assignment_number => rec_emp.assignment_number,
                  p_effective_date => v_start_date,
                  p_element_name => 'Off In Lieu Bank Plan',
                  p_element_type_id => v_element_type_id,
                  p_value_1 => 1,
                  p_batch_line_id => v_batch_line_id,
                  p_object_version_number => v_batch_object_version_number
               );

               fnd_file.put_line(fnd_file.OUTPUT,
                  'Created Off In Lieu Bank Plan for Emp#: ' ||
                  rec_emp.employee_number ||
                  ' Start Date: ' || TO_CHAR(v_start_date, 'DD-MON-YYYY'));
            EXCEPTION
               WHEN OTHERS THEN
                  fnd_file.put_line(fnd_file.LOG,
                     'Error creating entry for Emp#: ' ||
                     rec_emp.employee_number || ' - ' || SQLERRM);
            END;
         ELSE
            fnd_file.put_line(fnd_file.OUTPUT,
               'Already exists for Emp#: ' || rec_emp.employee_number);
         END IF;
      END LOOP;

      -------------------------------------------------------------------
      -- Transfer Batch to BEE
      BEGIN
         fnd_global.apps_initialize(l_user_id, l_resp_id, l_resp_appl_id);
         v_request_id1 := fnd_request.submit_request(
            application => 'PER',
            program => 'PAYLINK(TRANSFER)',
            description => 'Transfer BEE batch for Off In Lieu Bank Plan',
            start_time => SYSDATE,
            sub_request => FALSE,
            argument1 => 'BATCHEE',
            argument2 => 'TRANSFER',
            argument3 => l_batch_id
         );
         COMMIT;
         fnd_file.put_line(fnd_file.OUTPUT, 'BEE Batch transferred successfully.');
      EXCEPTION
         WHEN OTHERS THEN
            fnd_file.put_line(fnd_file.LOG, 'Error transferring BEE: ' || SQLERRM);
      END;

   EXCEPTION
      WHEN OTHERS THEN
         fnd_file.put_line(fnd_file.LOG, 'Error in Main Program: ' || SQLERRM);
   END OA_OffinLieu_bank_Adj_proc;
END xxoa_offin_lieu_bank_pkg;
/
